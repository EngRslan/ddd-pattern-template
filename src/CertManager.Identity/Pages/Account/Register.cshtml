@page
@model CertManager.Identity.Pages.Account.Register
@{
    ViewData["Title"] = "Create Account";
}

<div class="container-fluid h-100 d-flex align-items-center justify-content-center">
    <div class="card shadow-lg border-0 rounded-4 p-4" style="max-width: 480px; width: 100%;">
        <div class="card-body">
            <div class="text-center mb-4">
                <div class="d-inline-flex align-items-center justify-content-center rounded-circle text-white mb-3" 
                     style="width: 60px; height: 60px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                    <span class="fs-4 fw-bold">CM</span>
                </div>
                <h1 class="h3 fw-bold text-dark">Create Your Account</h1>
                <p class="text-muted">Join CertManager to manage your certificates</p>
            </div>

            <form method="post" asp-route-returnUrl="@Model.ReturnUrl">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger rounded-3" role="alert"></div>
                
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-floating">
                            <input asp-for="Input.FirstName" class="form-control rounded-3" placeholder="John" />
                            <label asp-for="Input.FirstName">First Name</label>
                            <span asp-validation-for="Input.FirstName" class="text-danger small"></span>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-floating">
                            <input asp-for="Input.LastName" class="form-control rounded-3" placeholder="Doe" />
                            <label asp-for="Input.LastName">Last Name</label>
                            <span asp-validation-for="Input.LastName" class="text-danger small"></span>
                        </div>
                    </div>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" class="form-control rounded-3" type="email" placeholder="name@example.com" />
                    <label asp-for="Input.Email">Email Address</label>
                    <span asp-validation-for="Input.Email" class="text-danger small"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" class="form-control rounded-3" type="password" placeholder="Password" id="password" />
                    <label asp-for="Input.Password">Password</label>
                    <span asp-validation-for="Input.Password" class="text-danger small"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Input.ConfirmPassword" class="form-control rounded-3" type="password" placeholder="Confirm Password" />
                    <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger small"></span>
                </div>

                <div class="password-strength mb-3">
                    <small class="text-muted">Password Strength:</small>
                    <div class="progress" style="height: 5px;">
                        <div class="progress-bar" id="password-strength-bar" role="progressbar" style="width: 0%"></div>
                    </div>
                    <small class="text-muted" id="password-strength-text">Enter a password</small>
                </div>

                <div class="form-check mb-3">
                    <input asp-for="Input.AgreeToTerms" class="form-check-input" type="checkbox" />
                    <label asp-for="Input.AgreeToTerms" class="form-check-label small">
                        I agree to the <a href="#" class="text-decoration-none">Terms of Service</a> and 
                        <a href="#" class="text-decoration-none">Privacy Policy</a>
                    </label>
                    <span asp-validation-for="Input.AgreeToTerms" class="text-danger small"></span>
                </div>

                <button type="submit" class="btn btn-primary w-100 py-2 rounded-3 fw-semibold">
                    <i class="bi bi-person-plus me-2"></i>Create Account
                </button>

                @if ((Model.ExternalLogins?.Count ?? 0) > 0)
                {
                    <div class="position-relative text-center my-4">
                        <hr class="text-muted">
                        <span class="position-absolute top-50 start-50 translate-middle bg-white px-3 text-muted small">or sign up with</span>
                    </div>

                    <div class="d-flex gap-2 mb-3">
                        @foreach (var provider in Model.ExternalLogins!)
                        {
                            <button type="submit" class="btn btn-outline-secondary flex-fill py-2 rounded-3" 
                                    name="provider" value="@provider.Name" 
                                    title="Sign up using your @provider.DisplayName account">
                                @if (provider.Name.ToLower() == "google")
                                {
                                    <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
                                        <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4"/>
                                        <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853"/>
                                        <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05"/>
                                        <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335"/>
                                    </svg>
                                }
                                else if (provider.Name.ToLower() == "microsoft")
                                {
                                    <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
                                        <path d="M11.4 11.4H2.6V2.6h8.8v8.8z" fill="#f25022"/>
                                        <path d="M21.4 11.4h-8.8V2.6h8.8v8.8z" fill="#7fba00"/>
                                        <path d="M11.4 21.4H2.6v-8.8h8.8v8.8z" fill="#00a4ef"/>
                                        <path d="M21.4 21.4h-8.8v-8.8h8.8v8.8z" fill="#ffb900"/>
                                    </svg>
                                }
                                <span class="ms-2">@provider.DisplayName</span>
                            </button>
                        }
                    </div>
                }

                <div class="text-center mt-4 pt-3 border-top">
                    <p class="mb-0">
                        Already have an account? 
                        <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl" class="text-decoration-none fw-semibold">Sign In</a>
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .card {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.98);
        }
        
        .form-floating > .form-control:focus ~ label {
            color: #667eea;
        }
        
        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .btn-outline-secondary:hover {
            background-color: #f8f9fa;
            border-color: #dee2e6;
        }
        
        a {
            color: #667eea;
        }
        
        a:hover {
            color: #764ba2;
        }
        
        .progress {
            background-color: #e9ecef;
        }
        
        .progress-bar {
            transition: width 0.3s ease, background-color 0.3s ease;
        }
        
        .password-weak {
            background-color: #dc3545;
        }
        
        .password-fair {
            background-color: #ffc107;
        }
        
        .password-good {
            background-color: #28a745;
        }
        
        .password-strong {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Password strength checker
        document.getElementById('password').addEventListener('input', function(e) {
            var password = e.target.value;
            var strengthBar = document.getElementById('password-strength-bar');
            var strengthText = document.getElementById('password-strength-text');
            
            var strength = 0;
            
            // Length check
            if (password.length >= 8) strength += 25;
            if (password.length >= 12) strength += 10;
            
            // Complexity checks
            if (/[a-z]/.test(password)) strength += 15;
            if (/[A-Z]/.test(password)) strength += 15;
            if (/\d/.test(password)) strength += 15;
            if (/[!@@#$%^&*(),.?":{}|<>]/.test(password)) strength += 20;
            
            // Update progress bar
            strengthBar.style.width = strength + '%';
            
            // Update color and text
            strengthBar.classList.remove('password-weak', 'password-fair', 'password-good', 'password-strong');
            
            if (strength < 25) {
                strengthBar.classList.add('password-weak');
                strengthText.textContent = 'Very Weak';
                strengthText.className = 'text-danger small';
            } else if (strength < 50) {
                strengthBar.classList.add('password-fair');
                strengthText.textContent = 'Weak';
                strengthText.className = 'text-warning small';
            } else if (strength < 75) {
                strengthBar.classList.add('password-good');
                strengthText.textContent = 'Good';
                strengthText.className = 'text-info small';
            } else {
                strengthBar.classList.add('password-strong');
                strengthText.textContent = 'Strong';
                strengthText.className = 'text-success small';
            }
            
            if (password.length === 0) {
                strengthBar.style.width = '0%';
                strengthText.textContent = 'Enter a password';
                strengthText.className = 'text-muted small';
            }
        });
    </script>
}