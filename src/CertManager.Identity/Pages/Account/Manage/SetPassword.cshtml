@page
@model CertManager.Identity.Pages.Account.Manage.SetPassword
@{
    ViewData["Title"] = "Set Password";
    Layout = "_ManageLayout";
}

<div class="card shadow-sm">
    <div class="card-header">
        <h4 class="mb-0">@ViewData["Title"]</h4>
    </div>
    <div class="card-body">
        @if (Model.StatusMessage != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @Model.StatusMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="alert alert-info" role="alert">
            <h5 class="alert-heading"><i class="bi bi-info-circle me-2"></i>Set Your Password</h5>
            <p>You do not have a local username/password for this site. Add a local account so you can log in without an external login.</p>
        </div>

        <form method="post">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
            
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Input.NewPassword" class="form-label"></label>
                        <div class="input-group">
                            <input asp-for="Input.NewPassword" class="form-control" type="password" id="newPassword" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('newPassword')">
                                <i class="bi bi-eye" id="newPasswordIcon"></i>
                            </button>
                        </div>
                        <span asp-validation-for="Input.NewPassword" class="text-danger"></span>
                        <div class="form-text">
                            <small>Password must be at least 6 characters long.</small>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Input.ConfirmPassword" class="form-label"></label>
                        <div class="input-group">
                            <input asp-for="Input.ConfirmPassword" class="form-control" type="password" id="confirmPassword" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('confirmPassword')">
                                <i class="bi bi-eye" id="confirmPasswordIcon"></i>
                            </button>
                        </div>
                        <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="card bg-light mb-3">
                <div class="card-body">
                    <h6 class="card-title">Password Requirements:</h6>
                    <ul class="mb-0">
                        <li id="length-check"><i class="bi bi-x-circle text-danger"></i> At least 6 characters</li>
                        <li id="uppercase-check"><i class="bi bi-x-circle text-danger"></i> At least one uppercase letter</li>
                        <li id="lowercase-check"><i class="bi bi-x-circle text-danger"></i> At least one lowercase letter</li>
                        <li id="number-check"><i class="bi bi-x-circle text-danger"></i> At least one number</li>
                        <li id="special-check"><i class="bi bi-x-circle text-danger"></i> At least one special character</li>
                    </ul>
                </div>
            </div>

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-lock me-2"></i>Set Password
                </button>
                <a asp-page="./Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePassword(fieldId) {
            var field = document.getElementById(fieldId);
            var icon = document.getElementById(fieldId + 'Icon');
            
            if (field.type === "password") {
                field.type = "text";
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                field.type = "password";
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        }

        // Password strength checker
        document.getElementById('newPassword').addEventListener('input', function(e) {
            var password = e.target.value;
            
            // Check length
            updateRequirement('length-check', password.length >= 6);
            
            // Check uppercase
            updateRequirement('uppercase-check', /[A-Z]/.test(password));
            
            // Check lowercase
            updateRequirement('lowercase-check', /[a-z]/.test(password));
            
            // Check number
            updateRequirement('number-check', /\d/.test(password));
            
            // Check special character
            updateRequirement('special-check', /[!@@#$%^&*(),.?":{}|<>]/.test(password));
        });

        function updateRequirement(elementId, isMet) {
            var element = document.getElementById(elementId);
            var icon = element.querySelector('i');
            
            if (isMet) {
                icon.classList.remove('bi-x-circle', 'text-danger');
                icon.classList.add('bi-check-circle', 'text-success');
            } else {
                icon.classList.remove('bi-check-circle', 'text-success');
                icon.classList.add('bi-x-circle', 'text-danger');
            }
        }
    </script>
}